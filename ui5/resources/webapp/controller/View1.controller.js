sap.ui.define(["sap/ui/core/mvc/Controller"], function(Controller) {
	"use strict";
	return Controller.extend("sandbox.ui5.controller.View1", {
		/**
		 *@memberOf sandbox.ui5.controller.View1
		 */
		action: function(oEvent) {
			var that = this;
			var actionParameters = JSON.parse(oEvent.getSource().data("wiring").replace(/'/g, "\""));
			var eventType = oEvent.getId();
			var aTargets = actionParameters[eventType].targets || [];
			aTargets.forEach(function(oTarget) {
				var oControl = that.byId(oTarget.id);
				if (oControl) {
					var oParams = {};
					for (var prop in oTarget.parameters) {
						oParams[prop] = oEvent.getParameter(oTarget.parameters[prop]);
					}
					oControl[oTarget.action](oParams);
				}
			});
			var oNavigation = actionParameters[eventType].navigation;
			if (oNavigation) {
				var oParams = {};
				(oNavigation.keys || []).forEach(function(prop) {
					oParams[prop.name] = encodeURIComponent(JSON.stringify({
						value: oEvent.getSource().getBindingContext(oNavigation.model).getProperty(prop.name),
						type: prop.type
					}));
				});
				if (Object.getOwnPropertyNames(oParams).length !== 0) {
					this.getOwnerComponent().getRouter().navTo(oNavigation.routeName, oParams);
				} else {
					this.getOwnerComponent().getRouter().navTo(oNavigation.routeName);
				}
			}
		},
		/**
		 *@memberOf sandbox.ui5.controller.View1
		 */
		uploadFile: function(oEvent) {
			//This code was generated by the layout editor.
			// Collect input data
			var fileUploader = this.getView().byId("fileUploader");
			var busyIndicator = this.getView().byId("busyIndicator");
			var txtButton = this.getView().byId("txtButton");
			var xmlButton = this.getView().byId("xmlButton");
			var pageSegModeBox = this.getView().byId("pageSegModeBox");
			var modelTypeBox = this.getView().byId("modelTypeBox");
			var output_type;
			var ocrText = this.getView().byId("ocrText");
			if (txtButton.getSelected()) {
				output_type = "txt";
			} else {
				output_type = "xml";
			}
			if (!fileUploader.getValue()) {
				sap.m.MessageToast.show("Choose a file first");
				return;
			}
			var that = this;

			//Create options as per api
			var options = {
				"lang": "en",
				"outputType": output_type,
				"pageSegMode": pageSegModeBox.getSelectedKey(),
				"modelType": modelTypeBox.getSelectedKey()
			};
			// console.log(options);
			var optionsStringy = JSON.stringify(options);
			// Collect uploaded file
			var domRef = fileUploader.getFocusDomRef();
			var file = domRef.files[0];
			var fileName = file.name;
			// Create FormData and append required data
			var formData = new FormData();
			formData.append("files", file, fileName);
			formData.append("options", optionsStringy);
			console.log(file);
			console.log(optionsStringy);

			// Call backend to to send data and then call ocr from backend. currently not working.
			// $.ajax({
			// 	url: '/node/ocr/test/',
			// 	type: 'post',
			// 	contentType: false,
			// 	processData: false,
			// 	data: formData,
			// 	success: (data) => {
			// 		console.log("success");
			// 	},
			// 	error: (err) => {
			// 		console.log("error:" + err);
			// 	}
			// });
			
			// Call backend to get ocr options, like apikey and url
			// then call ocr api with returned data, and data collected from front end.
			$.ajax({
				url:'/node/ocr/options/',
				type:'get',
				success: (data) => {
					busyIndicator.setVisible(true);
					ocrRequest(data, formData);
				},
				error: (err) => {
					console.log("error:" + err);
				}
			});
			var ocrRequest = (options, form) =>{
				console.log("Calling ocr api with options...");
				$.ajax({
					url:options.url,
					headers: {
						'apiKey': options.apiKey,
						'Accept':'application/json'
					},
					'Accept':'application/json',
					type:'post',
					contentType:false,
					processData:false,
					// formData:form,
					data:form,
					success: (data) => {
						console.log(data);
						console.log(data['predictions'][0]);
						ocrText.setText(data['predictions'][0]);
						ocrText.setVisible(true);
						busyIndicator.setVisible(false);
					},
					error: (err) => {
						console.log(err);
					}
				});
			};
		}
	});
});